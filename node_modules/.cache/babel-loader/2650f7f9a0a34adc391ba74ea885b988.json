{"ast":null,"code":"var _jsxFileName = \"/home/ti/\\xC1rea de Trabalho/ReactMeal-main/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updateTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const updatedItems = state.items.concat(action.item);\n    return {\n      items: updatedItems,\n      totalAmount: updateTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvaider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 3\n  }, this);\n};\n\n_s(CartProvaider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvaider;\nexport default CartProvaider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvaider\");","map":{"version":3,"sources":["/home/ti/Área de Trabalho/ReactMeal-main/src/store/CartProvider.js"],"names":["React","useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updateTotalAmount","item","price","amount","existingCartItemIndex","findIndex","id","updatedItems","concat","CartProvaider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACxBC,EAAAA,KAAK,EAAE,EADiB;AAExBC,EAAAA,WAAW,EAAE;AAFW,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AAC1B,UAAMC,iBAAiB,GACtBH,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACG,IAAP,CAAYC,KAAZ,GAAoBJ,MAAM,CAACG,IAAP,CAAYE,MADrD;AAEA,UAAMC,qBAAqB,GAAGP,KAAK,CAACH,KAAN,CAAYW,SAAZ,CAC5BJ,IAAD,IAAUA,IAAI,CAACK,EAAL,KAAYR,MAAM,CAACG,IAAP,CAAYK,EADL,CAA9B;AAIA,UAAMC,YAAY,GAAGV,KAAK,CAACH,KAAN,CAAYc,MAAZ,CAAmBV,MAAM,CAACG,IAA1B,CAArB;AACA,WAAO;AACNP,MAAAA,KAAK,EAAEa,YADD;AAENZ,MAAAA,WAAW,EAAEK;AAFP,KAAP;AAIA;;AACD,SAAOP,gBAAP;AACA,CAfD;;AAiBA,MAAMgB,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAChC,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCrB,UAAU,CACjDK,WADiD,EAEjDH,gBAFiD,CAAlD;;AAKA,QAAMoB,oBAAoB,GAAIZ,IAAD,IAAU;AACtCW,IAAAA,kBAAkB,CAAC;AAAEb,MAAAA,IAAI,EAAE,KAAR;AAAeE,MAAAA,IAAI,EAAEA;AAArB,KAAD,CAAlB;AACA,GAFD;;AAIA,QAAMa,yBAAyB,GAAIR,EAAD,IAAQ;AACzCM,IAAAA,kBAAkB,CAAC;AAAEb,MAAAA,IAAI,EAAE,QAAR;AAAkBO,MAAAA,EAAE,EAAEA;AAAtB,KAAD,CAAlB;AACA,GAFD;;AAIA,QAAMS,WAAW,GAAG;AACnBrB,IAAAA,KAAK,EAAEiB,SAAS,CAACjB,KADE;AAEnBC,IAAAA,WAAW,EAAEgB,SAAS,CAAChB,WAFJ;AAGnBqB,IAAAA,OAAO,EAAEH,oBAHU;AAInBI,IAAAA,UAAU,EAAEH;AAJO,GAApB;AAOA,sBACC,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACEL,KAAK,CAACQ;AADR;AAAA;AAAA;AAAA;AAAA,UADD;AAKA,CA1BD;;GAAMT,a;;KAAAA,a;AA4BN,eAAeA,aAAf","sourcesContent":["import React, { useReducer } from \"react\";\n\nimport CartContext from \"./cart-context\";\n\nconst defaultCartState = {\n\titems: [],\n\ttotalAmount: 0,\n};\n\nconst cartReducer = (state, action) => {\n\tif (action.type === \"ADD\") {\n\t\tconst updateTotalAmount =\n\t\t\tstate.totalAmount + action.item.price * action.item.amount;\n\t\tconst existingCartItemIndex = state.items.findIndex(\n\t\t\t(item) => item.id === action.item.id\n\t\t);\n\n\t\tconst updatedItems = state.items.concat(action.item);\n\t\treturn {\n\t\t\titems: updatedItems,\n\t\t\ttotalAmount: updateTotalAmount,\n\t\t};\n\t}\n\treturn defaultCartState;\n};\n\nconst CartProvaider = (props) => {\n\tconst [cartState, dispatchCartAction] = useReducer(\n\t\tcartReducer,\n\t\tdefaultCartState\n\t);\n\n\tconst addItemToCartHandler = (item) => {\n\t\tdispatchCartAction({ type: \"ADD\", item: item });\n\t};\n\n\tconst removeItemFromCartHandler = (id) => {\n\t\tdispatchCartAction({ type: \"REMOVE\", id: id });\n\t};\n\n\tconst cartContext = {\n\t\titems: cartState.items,\n\t\ttotalAmount: cartState.totalAmount,\n\t\taddItem: addItemToCartHandler,\n\t\tremoveItem: removeItemFromCartHandler,\n\t};\n\n\treturn (\n\t\t<CartContext.Provider value={cartContext}>\n\t\t\t{props.children}\n\t\t</CartContext.Provider>\n\t);\n};\n\nexport default CartProvaider;\n"]},"metadata":{},"sourceType":"module"}